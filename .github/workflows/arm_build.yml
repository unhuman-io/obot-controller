name: Arm build

on:
  push:
  pull_request:
    types: [assigned]

jobs:
  build:
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        include:
          - project: boost_g474
            config: pz
          - project: fabulab_f446
            config: motor
          - project: obot_g474
            config: motor_template
          - project: obot_g474
            config: nucleo_uart
          - project: obot_g474
            config: nucleo_uart_obot
            build_other: C_DEFS="-DCOMMS_UART_OBOT"
          - project: obot_g474
            config: nucleo_spi
          - project: obot_g474
            config: motor_enc
            build_other: CALIBRATION_FILE=../calibration/obot_g474/motor_enc/cal.c
          - project: obot_g474
            config: motor_wheel
          - project: obot_g474
            config: osa14
          - project: obot_g474
            config: motor_40_osa14
          - project: obot_g474
            config: motor_aksim
          - project: obot_g474
            config: motor_aksim_19_17
            build_other: C_DEFS="-DMAX11254_TORQUE_SENSOR" # MR2
          - project: obot_g474
            config: motor_pz2 # MR1
          - project: obot_g474
            config: h2
          - project: obot_g474
            config: hands
          - project: obot_g474
            config: motor_aksim_20_19 # MR0
          - project: obot_g474
            config: motor_aksim_19_18 # MR0P
          - project: obot_g474
            config: osa14_jl1
    runs-on: ubuntu-latest
    container: leemagnusson/arm-gcc:latest
    steps:
    - uses: actions/checkout@master
      with:
        fetch-depth: 0
        submodules: recursive
    - name: make ${{ matrix.project }} ${{ matrix.config }}
      run: |
        git config --global --add safe.directory '*'
        make -C ${{ matrix.project }} CONFIG=${{ matrix.config }} -j2 GCC_PATH=/gcc/bin ${{ matrix.build_other }}
    - name: Archive ${{ matrix.project }} ${{ matrix.config }}
      uses: actions/upload-artifact@main
      with:
        name: ${{ matrix.project }} ${{ matrix.config }}
        path: |
          ${{ matrix.project }}/build/${{ matrix.config }}.elf
          ${{ matrix.project }}/build/${{ matrix.config }}.tgz
    - name: rename
      run: |
        mv ${{ matrix.project }}/build/${{ matrix.config }}.elf ${{ matrix.project }}_${{ matrix.config }}.elf
        mv ${{ matrix.project }}/build/${{ matrix.config }}.tgz ${{ matrix.project }}_${{ matrix.config }}.tgz
    - name: releaser main
      uses: pyTooling/Actions/releaser@main
      if: contains(github.ref, 'develop')
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        files: |
          ${{ matrix.project }}_${{ matrix.config }}.elf
          ${{ matrix.project }}_${{ matrix.config }}.tgz
        tag: develop
    - name: releaser develop
      uses: pyTooling/Actions/releaser@main
      if: contains(github.ref, 'main')
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        files: |
          ${{ matrix.project }}_${{ matrix.config }}.elf
          ${{ matrix.project }}_${{ matrix.config }}.tgz
        tag: main
  test:
    timeout-minutes: 10
    needs: [build]
    runs-on: [self-hosted, motor_enc]
    steps:
    - uses: actions/checkout@main
    - uses: actions/download-artifact@main
      with:
        name: obot_g474 motor_enc
    - uses: actions/download-artifact@main
      with:
        path: .
    - name: test
      run: |
        ls
        tar xzf motor_enc.tgz
        ./motor_enc/load_motor_enc.sh -p 1-3.1 & # ? rev
        tar xzf obot_g474\ motor_aksim_19_17/motor_aksim_19_17.tgz
        ./motor_aksim_19_17/load_motor_aksim_19_17.sh -p 1-3.2 & # MR2
        tar xzf obot_g474\ motor_aksim_20_19/motor_aksim_20_19.tgz
        ./motor_aksim_20_19/load_motor_aksim_20_19.sh -p 1-3.7 & # MR0
        tar xzf obot_g474\ motor_aksim_19_18/motor_aksim_19_18.tgz
        ./motor_aksim_19_18/load_motor_aksim_19_18.sh -p 1-3.6 & # MR0P
        tar xzf obot_g474\ motor_pz2/motor_pz2.tgz
        ./motor_pz2/load_motor_pz2.sh -p 1-3.5 & # MR1
        tar xzf obot_g474\ osa14_jl1/osa14_jl1.tgz
        ./osa14_jl1/load_osa14_jl1.sh -p 1-3.4.2 &

        wait
        sleep 6
        # motor_util -p 1-3.1 read | head # doesn't exit for some reason

        # check for existence
        motor_util -p 1-3.1
        motor_util -p 1-3.2
        motor_util -p 1-3.5
        motor_util -p 1-3.6
        motor_util -p 1-3.7
        motor_util -p 1-3.4.2
        num_motors=6
        
        motor_util -l --run-stats

        # check correct hash
        sha=$(git rev-parse HEAD | head -c7)
        [ $(motor_util -l | grep $sha | wc -l) -eq $num_motors ]

        check_var() { # name, value, low limit, high limit
          echo checking $3 "<" $1 "<" $4 with value $2
          (( $3 < $2 && $2 < $4 ))
          echo "Benchmark$1 0 $2 bytes" >> output.txt
        }

        run_stats=$(motor_util -p 1-3.1 --run-stats --no-list | tail -n1)
        echo run_stats: $run_stats

        check_var max_fast_loop_cycles $(echo $run_stats | cut -d',' -f2) 600 900
        check_var max_fast_loop_period $(echo $run_stats | cut -d',' -f3) 3400 3500
        check_var max_main_loop_cycles $(echo $run_stats | cut -d',' -f4) 4000 6000
        check_var max_main_loop_period $(echo $run_stats | cut -d',' -f5) 17000 17100

        motor_util -p 1-3.1 --run-stats 1000 --no-list | awk -F", " \
          'NR==1 { for (i = 1; i < 5; i++) { headers[i]=$(i+5) } } \
          NR>1 { for (i in headers) { print "Benchmark" headers[i] \ 
          "\t" $(i+1) "\t" $(i+5) " cycles"} }' | tee -a output.txt
        
        PYTHONPATH=/usr/share/motor-realtime python3 obot_g474/test/system/test_motor_enc.py -p 1-3.1 -v

        program_size=$(wc -c < motor_enc/motor_enc_noparam.bin)
        check_var program_size $program_size 100000 300000

        param_size=$(wc -c < motor_enc/motor_enc_param_only.bin)
        check_var param_size $param_size 5000 20000

        text_size=$(size motor_enc.elf | tail -n1 | cut -f1)
        check_var text_size $text_size 100000 300000

        data_size=$(size motor_enc.elf | tail -n1 | cut -f2)
        check_var data_size $data_size 5000 20000

        bss_size=$(size motor_enc.elf | tail -n1 | cut -f3)
        check_var bss_size $bss_size 50000 100000

        stack_used=$(motor_util -p 1-3.1 --no-list --set-api stack_used | tail -n 1 | cut -f2 -d' ')
        check_var stack_used $stack_used 1000 4000

        heap_used=$(motor_util -p 1-3.1 --no-list --set-api heap_used | tail -n 1 | cut -f2 -d' ')
        check_var heap_used $heap_used 15000 30000

        cat output.txt
    - name: test uart
      run: |
        tar xzf obot_g474\ nucleo_uart/nucleo_uart.tgz
        cd nucleo_uart
        st-flash reset
        sleep 2
        ../scripts/uart_program.sh
        # extra reset because bootloader pin held misses watchdog reset
        ~/tmp/stm32flash/stm32flash /dev/ttyACM0 -g 0x8000000 -b 4000000 || true
        sleep 2
        motor_util -a /dev/ttyACM0 --uart-raw
    - name: Store benchmark result
      uses: rhysd/github-action-benchmark@v1
      with:
        tool: 'go'
        output-file-path: output.txt
        github-token: ${{ secrets.GITHUB_TOKEN }}
        auto-push: true        
